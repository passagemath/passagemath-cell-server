CodeMirror.defineMode("python",function(a){function v(a,c){var d=c.tokenize(a,c),e=a.current();if(e==="."){d=c.tokenize(a,c),e=a.current();return d==="py-identifier"?"py-identifier":b}if(e==="@"){d=c.tokenize(a,c),e=a.current();return d==="py-identifier"||e==="@staticmethod"||e==="@classmethod"?"py-decorator":b}if(e==="pass"||e==="return")c.dedent+=1;(e===":"&&!c.lambda&&c.scopes[0].type=="py"||d==="py-indent")&&t(a,c);var f="[({".indexOf(e);f!==-1&&t(a,c,"])}".slice(f,f+1));if(d==="py-dedent"&&u(a,c))return b;f="])}".indexOf(e);if(f!==-1&&u(a,c))return b;c.dedent>0&&a.eol()&&c.scopes[0].type=="py"&&(c.scopes.length>1&&c.scopes.shift(),c.dedent-=1);return d}function u(a,b){if(b.scopes.length!=1){if(b.scopes[0].type==="py"){var c=a.indentation(),d=-1;for(var e=0;e<b.scopes.length;++e)if(c===b.scopes[e].offset){d=e;break}if(d===-1)return!0;while(b.scopes[0].offset!==c)b.scopes.shift();return!1}b.scopes.shift();return!1}}function t(b,c,d){d=d||"py";var e=0;if(d==="py"){for(var f=0;f<c.scopes.length;++f)if(c.scopes[f].type==="py"){e=c.scopes[f].offset+a.indentUnit;break}}else e=b.column()+b.current().length;c.scopes.unshift({offset:e,type:d})}function s(c){while("rub".indexOf(c[0].toLowerCase())>=0)c=c.substr(1);var d=new RegExp(c),e=c.length==1,f="py-string";return function(c,g){while(!c.eol()){c.eatWhile(/[^'"\\]/);if(c.eat("\\")){c.next();if(e&&c.eol())return f}else{if(c.match(d)){g.tokenize=r;return f}c.eat(/['"]/)}}e&&(a.mode.singleLineStringErrors?f=b:g.tokenize=r);return f}}function r(a,c){if(a.sol()){var k=c.scopes[0].offset;if(a.eatSpace()){var l=a.indentation();if(l>k)return"py-indent";if(l<k)return"py-dedent";return"whitespace"}k>0&&u(a,c)}if(a.eatSpace())return"py-space";var m=a.peek();if(m==="#"){a.skipToEnd();return"py-comment"}if(a.match(/^[0-9\.]/,!1)){var n=!1;a.match(/^\d*\.\d+(e[\+\-]?\d+)?/i)&&(n=!0),a.match(/^\d+\.\d*/)&&(n=!0),a.match(/^\.\d+/)&&(n=!0);if(n){a.eat(/J/i);return"py-literal"}var r=!1;a.match(/^0x[0-9a-f]+/i)&&(r=!0),a.match(/^0b[01]+/i)&&(r=!0),a.match(/^0o[0-7]+/i)&&(r=!0),a.match(/^[1-9]\d*(e[\+\-]?\d+)?/)&&(a.eat(/J/i),r=!0),a.match(/^0(?![\dx])/i)&&(r=!0);if(r){a.eat(/L/i);return"py-literal"}}if(a.match(o)){c.tokenize=s(a.current());return c.tokenize(a,c)}if(a.match(h)||a.match(g))return"py-delimiter";if(a.match(f)||a.match(d)||a.match(j))return"py-operator";if(a.match(e))return"py-delimiter";if(a.match(q))return"py-type";if(a.match(p))return"py-keyword";if(a.match(i))return"py-identifier";a.next();return b}function c(a){return new RegExp("^(("+a.join(")|(")+"))\\b")}var b="py-error",d=new RegExp("^[\\+\\-\\*/%&|\\^~<>!]"),e=new RegExp("^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]"),f=new RegExp("^((==)|(!=)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\*\\*))"),g=new RegExp("^((\\+=)|(\\-=)|(\\*=)|(%=)|(/=)|(&=)|(\\|=)|(\\^=))"),h=new RegExp("^((//=)|(>>=)|(<<=)|(\\*\\*=))"),i=new RegExp("^[_A-Za-z][_A-Za-z0-9]*"),j=c(["and","or","not","is","in"]),k=["as","assert","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","lambda","pass","raise","return","try","while","with","yield"],l=["bool","classmethod","complex","dict","enumerate","float","frozenset","int","list","object","property","reversed","set","slice","staticmethod","str","super","tuple","type"],m={types:["basestring","buffer","file","long","unicode","xrange"],keywords:["exec","print"]},n={types:["bytearray","bytes","filter","map","memoryview","open","range","zip"],keywords:["nonlocal"]};if(!a.mode.version||parseInt(a.mode.version,10)!==3){k=k.concat(m.keywords),l=l.concat(m.types);var o=new RegExp("^(([rub]|(ur)|(br))?('{3}|\"{3}|['\"]))","i")}else{k=k.concat(n.keywords),l=l.concat(n.types);var o=new RegExp("^(([rb]|(br))?('{3}|\"{3}|['\"]))","i")}var p=c(k),q=c(l),w={startState:function(a){return{tokenize:r,scopes:[{offset:a||0,type:"py"}],lastToken:null,lambda:!1,dedent:0}},token:function(a,b){var c=v(a,b);b.lastToken={style:c,content:a.current()},a.eol()&&a.lambda&&(b.lambda=!1);return c},indent:function(a,b){if(a.tokenize!=r)return 0;return a.scopes[0].offset}};return w}),CodeMirror.defineMIME("text/x-python","python")